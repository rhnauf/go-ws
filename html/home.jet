<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"
      crossorigin="anonymous"
    />
    <style>
      /* body {
        background-color: powderblue;
      }
      h1 {
        color: blue;
      }
      p {
        color: red;
      } */
      .chatbox {
        outline: 1px solid grey;
        min-height: 160px;
        padding: 0.5em;
        font-size: 20px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="row">
        <div class="col">
          <h1 class="mt-3">Home Page</h1>
          <hr />
        </div>
      </div>
      <div class="row">
        <div class="col-md-8">
          <h3>Chat</h3>

          <p><a href="https://github.com">Go to github</a></p>

          <div class="form-group">
            <label for="username">Username:</label>
            <input
              type="text"
              name="username"
              id="username"
              class="form-control"
              autocomplete="off"
            />
          </div>

          <div class="form-group">
            <label for="recipient">Recipient:</label>
            <input
              type="text"
              name="recipient"
              id="recipient"
              class="form-control"
              autocomplete="off"
            />
          </div>

          <div class="form-group">
            <label for="message">message:</label>
            <input
              type="text"
              name="message"
              id="message"
              class="form-control"
              autocomplete="off"
            />
          </div>

          <br />

          <a
            href="javascript:void(0);"
            class="btn btn-outline-secondary"
            id="sendBtn"
            >Send Message</a
          >

          <input type="hidden" name="action" id="action" />

          <hr />
          <div id="output" class="chatbox"></div>
        </div>
      </div>
    </div>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
      crossorigin="anonymous"
    ></script>
  </body>

  <script>
    let socket = null;
    let chat = document.getElementById('output');
    let userField = document.getElementById('username');
    let recipientField = document.getElementById('recipient');
    let messageField = document.getElementById('message');

    window.onbeforeunload = function () {
      console.log('leaving');
      let jsonData = {};

      jsonData['action'] = 'left';
      socket.send(JSON.stringify(jsonData));
    };

    document.addEventListener('DOMContentLoaded', function () {
      socket = new WebSocket('ws://127.0.0.1:8080/ws');

      socket.onopen = () => {
        console.log('successfully connected to server');
      };

      socket.onclose = () => {
        console.log('connection close');
      };

      socket.onerror = () => {
        console.log('there was an error');
      };

      socket.onmessage = (message) => {
        // console.log(message);
        let data = JSON.parse(message.data);
        console.log('action is', data.action);

        switch (data.action) {
          case 'broadcast':
            chat.innerHTML = chat.innerHTML + data.message + '<br>';
            break;
        }
      };

      userField.addEventListener('change', function () {
        let jsonData = {};
        jsonData['action'] = 'connect';
        jsonData['username'] = this.value;
        socket.send(JSON.stringify(jsonData));
      });

      messageField.addEventListener('keydown', function (event) {
        if (event.code == 'Enter') {
          if (!socket) {
            console.log('no connection');
            return false;
          }

          console.log(userField.value, messageField.value);

          if (userField.value === '' || recipientField.value === '' || messageField.value === '' || userField.value === recipientField.value) {
            alert('username or recipient or message field cannot be empty');
            return false;
          } else {
            sendMessage();
          }

          event.preventDefault();
          event.stopPropagation();
        }
      });

      document.getElementById('sendBtn').addEventListener('click', function () {
        console.log(userField.value, messageField.value, 'enter btn');
          if (userField.value === '' || recipientField.value === '' || messageField.value === '' || userField.value === recipientField.value) {
            alert('username or recipient or message field cannot be empty');
          return false;
        } else {
          sendMessage();
        }
      });
    });

    function sendMessage() {
      let jsonData = {};

      jsonData['action'] = 'broadcast';
      jsonData['username'] = userField.value;
      jsonData['recipient'] = recipientField.value;
      jsonData['message'] = messageField.value;
      socket.send(JSON.stringify(jsonData));
      messageField.value = '';
    }
  </script>
</html>
